apiVersion: v1
kind: ConfigMap
metadata:
  name: halyard-frontend
data:
    frontend-nginx-config: |
      upstream halyard-backend{
        # requests from the public facing app to the API server are routed here.
        server halyard-backend:3000;
      }

      upstream halyard-sockets{
          # requests from the public facing app to the SOCKETS server are routed here.
        server halyard-sockets:8999;
      }

      server {
          listen       80;
          server_name  localhost;

          #charset koi8-r;
          #access_log  /var/log/nginx/host.access.log  main;

          location ^~ /api {
              # requests from the public faccing app to the API server are routed here.
              proxy_pass http://halyard-backend;
          }

          location ^~ /ping {
              proxy_pass http://halyard-backend;
          }

          location ^~ /sockets {
              # matches any query beginning with /api/ and halts searching
              # proxy api requests to the upstream server declared above
              proxy_pass http://halyard-sockets;

              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

              # WebSocket support
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
          }

          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
          }

          error_page   500 502 503 504  /50x.html;
          location = /50x.html {
              root   /usr/share/nginx/html;
          }
      }
---

apiVersion: apps/v1

kind: Deployment

metadata:
  name: halyard-frontend
  labels:
    app: halyard
    component: frontend

spec:
  replicas: 1
  selector:
    matchLabels:
      app: halyard
      component: frontend

  template:
    metadata:
      labels:
        app: halyard
        component: frontend
    spec:
      containers:
        - name: halyard-frontend
          image: robblovell/halyard-frontend:latest
          imagePullPolicy: Always
          env:
            - name: HALYARD_API_HOST
              value: halyard-backend
            - name: HALYARD_API_PORT
              value: '3000'
            - name: HALYARD_SOCKETS_HOST
              value: halyard-sockets
            - name: HALYARD_SOCKETS_PORT
              value: '8999'
          ports:
            - containerPort: 80
          volumeMounts:
            - name: halyard-frontend-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: frontend-nginx-config
      volumes:
      - name: halyard-frontend-volume
        configMap:
          name: halyard-frontend
